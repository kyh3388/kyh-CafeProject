{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\kyh-CafeProject\\\\CafeProject\\\\Cafe_Project\\\\frontend\\\\src\\\\component\\\\BoardDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react'; // React 및 훅 임포트\nimport { useNavigate, useParams } from 'react-router-dom'; // URL 파라미터 및 페이지 이동을 위한 훅 임포트\nimport '../App.css'; // CSS 파일 임포트\n\n// 게시글 상세보기 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardDetail({\n  user\n}) {\n  _s();\n  // URL 파라미터에서 게시글 번호를 가져옴\n  const {\n    boardNumber\n  } = useParams();\n\n  // 게시물, 오류 메시지, 수정 상태를 위한 상태 변수\n  const [board, setBoard] = useState(null); // 게시물 데이터를 저장할 상태\n  const [error, setError] = useState(null); // 오류 메시지를 저장할 상태\n  const [isEditing, setIsEditing] = useState(false); // 수정 모드 여부를 저장할 상태\n  const [editedTitle, setEditedTitle] = useState(''); // 수정된 제목을 저장할 상태\n  const [editedContent, setEditedContent] = useState(''); // 수정된 내용을 저장할 상태\n  const navigate = useNavigate(); // 페이지 이동을 위한 훅\n\n  // 컴포넌트가 마운트될 때 게시물을 가져오는 함수 실행\n  useEffect(() => {\n    const fetchBoard = async () => {\n      try {\n        // 서버에 해당 게시물 데이터를 요청\n        const response = await fetch(`http://localhost:8080/boards/detail/${boardNumber}`);\n        if (!response.ok) {\n          setError('게시물을 불러오는 중 오류가 발생했습니다.'); // 응답이 실패한 경우\n        } else {\n          const data = await response.json(); // 서버 응답을 JSON으로 변환\n          setBoard(data); // 게시물 데이터를 상태에 저장\n          setEditedTitle(data.boardTitle); // 게시물 제목을 수정 상태에 저장\n          setEditedContent(data.boardWrite); // 게시물 내용을 수정 상태에 저장\n        }\n      } catch (err) {\n        setError('네트워크 오류가 발생했습니다.'); // 네트워크 오류 처리\n      }\n    };\n    fetchBoard(); // 게시물 데이터를 가져오는 함수 호출\n  }, [boardNumber]); // 게시물 번호가 변경될 때마다 재실행\n\n  // 게시물 삭제 처리 함수\n  const handleDelete = async () => {\n    if (window.confirm(\"정말로 이 게시물을 삭제하시겠습니까?\")) {\n      // 삭제 확인\n      try {\n        // 서버에 게시물 삭제 요청\n        const response = await fetch(`http://localhost:8080/boards/delete/${boardNumber}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          alert('게시물이 삭제되었습니다.'); // 삭제 성공 시 알림\n          navigate('/boards'); // 게시물 목록 페이지로 이동\n        } else {\n          alert('게시물 삭제에 실패했습니다.'); // 삭제 실패 시 알림\n        }\n      } catch (error) {\n        alert('네트워크 오류로 게시물 삭제에 실패했습니다.'); // 네트워크 오류 처리\n      }\n    }\n  };\n\n  // 게시물 수정 처리 함수\n  const handleEdit = async () => {\n    if (isEditing) {\n      // 수정 중인 상태에서 저장 버튼 클릭 시\n      try {\n        // 서버에 게시물 수정 요청\n        const response = await fetch(`http://localhost:8080/boards/update/${boardNumber}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            boardTitle: editedTitle,\n            // 수정된 제목\n            boardWrite: editedContent // 수정된 내용\n          })\n        });\n        if (response.ok) {\n          const updatedBoard = await response.json(); // 수정된 게시물 데이터\n          setBoard(updatedBoard); // 수정된 데이터를 상태에 저장\n          setIsEditing(false); // 수정 모드 종료\n          alert('게시물이 수정되었습니다.'); // 수정 성공 시 알림\n        } else {\n          alert('게시물 수정에 실패했습니다.'); // 수정 실패 시 알림\n        }\n      } catch (error) {\n        alert('네트워크 오류로 게시물 수정에 실패했습니다.'); // 네트워크 오류 처리\n      }\n    } else {\n      setIsEditing(true); // 수정 모드로 전환\n    }\n  };\n\n  // 오류가 발생한 경우 오류 메시지 표시\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC624\\uB958: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 게시물 데이터가 아직 로드되지 않았을 경우 로딩 메시지 표시\n  if (!board) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 게시물 작성자 정보 처리\n  const userNickname = board.user ? board.user.userNickname : '알 수 없음'; // 작성자의 닉네임\n  const userId = board.user ? board.user.userId : null; // 작성자의 ID\n\n  // 컴포넌트 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isEditing ?\n      /*#__PURE__*/\n      // 수정 모드일 경우 제목을 입력할 수 있는 input 필드 표시\n      _jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedTitle,\n        onChange: e => setEditedTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 22\n      }, this) :\n      // 수정 모드가 아닐 경우 제목 표시\n      board.boardTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isEditing ?\n      /*#__PURE__*/\n      // 수정 모드일 경우 내용을 입력할 수 있는 textarea 필드 표시\n      _jsxDEV(\"textarea\", {\n        value: editedContent,\n        onChange: e => setEditedContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this) :\n      // 수정 모드가 아닐 경우 내용 표시\n      board.boardWrite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC791\\uC131\\uC790: \", userNickname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC791\\uC131\\uC77C: \", new Date(board.createdDate).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC218\\uC815\\uC77C: \", new Date(board.updatedDate).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), user && (userId === user.userId || user.userLevel >= 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: isEditing ? '저장' : '수정'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(BoardDetail, \"QxoBBxNCrovPwyFYwsX8vepiIJQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardDetail;\nexport default BoardDetail;\nvar _c;\n$RefreshReg$(_c, \"BoardDetail\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","BoardDetail","user","_s","boardNumber","board","setBoard","error","setError","isEditing","setIsEditing","editedTitle","setEditedTitle","editedContent","setEditedContent","navigate","fetchBoard","response","fetch","ok","data","json","boardTitle","boardWrite","err","handleDelete","window","confirm","method","alert","handleEdit","headers","body","JSON","stringify","updatedBoard","children","fileName","_jsxFileName","lineNumber","columnNumber","userNickname","userId","type","value","onChange","e","target","Date","createdDate","toLocaleString","updatedDate","userLevel","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/kyh-CafeProject/CafeProject/Cafe_Project/frontend/src/component/BoardDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'; // React 및 훅 임포트\r\nimport { useNavigate, useParams } from 'react-router-dom'; // URL 파라미터 및 페이지 이동을 위한 훅 임포트\r\nimport '../App.css'; // CSS 파일 임포트\r\n\r\n// 게시글 상세보기 컴포넌트\r\nfunction BoardDetail({ user }) {\r\n    // URL 파라미터에서 게시글 번호를 가져옴\r\n    const { boardNumber } = useParams();\r\n    \r\n    // 게시물, 오류 메시지, 수정 상태를 위한 상태 변수\r\n    const [board, setBoard] = useState(null); // 게시물 데이터를 저장할 상태\r\n    const [error, setError] = useState(null); // 오류 메시지를 저장할 상태\r\n    const [isEditing, setIsEditing] = useState(false); // 수정 모드 여부를 저장할 상태\r\n    const [editedTitle, setEditedTitle] = useState(''); // 수정된 제목을 저장할 상태\r\n    const [editedContent, setEditedContent] = useState(''); // 수정된 내용을 저장할 상태\r\n    const navigate = useNavigate(); // 페이지 이동을 위한 훅\r\n\r\n    // 컴포넌트가 마운트될 때 게시물을 가져오는 함수 실행\r\n    useEffect(() => {\r\n        const fetchBoard = async () => {\r\n            try {\r\n                // 서버에 해당 게시물 데이터를 요청\r\n                const response = await fetch(`http://localhost:8080/boards/detail/${boardNumber}`);\r\n                if (!response.ok) {\r\n                    setError('게시물을 불러오는 중 오류가 발생했습니다.'); // 응답이 실패한 경우\r\n                } else { \r\n                    const data = await response.json(); // 서버 응답을 JSON으로 변환\r\n                    setBoard(data); // 게시물 데이터를 상태에 저장\r\n                    setEditedTitle(data.boardTitle); // 게시물 제목을 수정 상태에 저장\r\n                    setEditedContent(data.boardWrite); // 게시물 내용을 수정 상태에 저장\r\n                }\r\n            } catch (err) {\r\n                setError('네트워크 오류가 발생했습니다.'); // 네트워크 오류 처리\r\n            }\r\n        };\r\n\r\n        fetchBoard(); // 게시물 데이터를 가져오는 함수 호출\r\n    }, [boardNumber]); // 게시물 번호가 변경될 때마다 재실행\r\n\r\n    // 게시물 삭제 처리 함수\r\n    const handleDelete = async () => {\r\n        if (window.confirm(\"정말로 이 게시물을 삭제하시겠습니까?\")) { // 삭제 확인\r\n            try {\r\n                // 서버에 게시물 삭제 요청\r\n                const response = await fetch(`http://localhost:8080/boards/delete/${boardNumber}`, {\r\n                    method: 'DELETE',\r\n                });\r\n                if (response.ok) {\r\n                    alert('게시물이 삭제되었습니다.'); // 삭제 성공 시 알림\r\n                    navigate('/boards'); // 게시물 목록 페이지로 이동\r\n                } else {\r\n                    alert('게시물 삭제에 실패했습니다.'); // 삭제 실패 시 알림\r\n                }\r\n            } catch (error) {\r\n                alert('네트워크 오류로 게시물 삭제에 실패했습니다.'); // 네트워크 오류 처리\r\n            }\r\n        }\r\n    };\r\n\r\n    // 게시물 수정 처리 함수\r\n    const handleEdit = async () => {\r\n        if (isEditing) {\r\n            // 수정 중인 상태에서 저장 버튼 클릭 시\r\n            try {\r\n                // 서버에 게시물 수정 요청\r\n                const response = await fetch(`http://localhost:8080/boards/update/${boardNumber}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        boardTitle: editedTitle, // 수정된 제목\r\n                        boardWrite: editedContent, // 수정된 내용\r\n                    }),\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const updatedBoard = await response.json(); // 수정된 게시물 데이터\r\n                    setBoard(updatedBoard); // 수정된 데이터를 상태에 저장\r\n                    setIsEditing(false); // 수정 모드 종료\r\n                    alert('게시물이 수정되었습니다.'); // 수정 성공 시 알림\r\n                } else {\r\n                    alert('게시물 수정에 실패했습니다.'); // 수정 실패 시 알림\r\n                }\r\n            } catch (error) {\r\n                alert('네트워크 오류로 게시물 수정에 실패했습니다.'); // 네트워크 오류 처리\r\n            }\r\n        } else {\r\n            setIsEditing(true); // 수정 모드로 전환\r\n        }\r\n    };\r\n\r\n    // 오류가 발생한 경우 오류 메시지 표시\r\n    if (error) {\r\n        return <div>오류: {error}</div>;\r\n    }\r\n\r\n    // 게시물 데이터가 아직 로드되지 않았을 경우 로딩 메시지 표시\r\n    if (!board) {\r\n        return <div>로딩 중...</div>;\r\n    }\r\n\r\n    // 게시물 작성자 정보 처리\r\n    const userNickname = board.user ? board.user.userNickname : '알 수 없음'; // 작성자의 닉네임\r\n    const userId = board.user ? board.user.userId : null; // 작성자의 ID\r\n\r\n    // 컴포넌트 렌더링\r\n    return (\r\n        <div>\r\n            <h2>\r\n                {isEditing ? (\r\n\t                    // 수정 모드일 경우 제목을 입력할 수 있는 input 필드 표시\r\n\t                    <input\r\n                        type=\"text\"\r\n                        value={editedTitle}\r\n                        onChange={(e) => setEditedTitle(e.target.value)}\r\n                    />\r\n                ) : (\r\n                    // 수정 모드가 아닐 경우 제목 표시\r\n                    board.boardTitle\r\n                )}\r\n            </h2>\r\n\r\n            <p>\r\n                {isEditing ? (\r\n                    // 수정 모드일 경우 내용을 입력할 수 있는 textarea 필드 표시\r\n                    <textarea\r\n                        value={editedContent}\r\n                        onChange={(e) => setEditedContent(e.target.value)}\r\n                    />\r\n                ) : (\r\n                    // 수정 모드가 아닐 경우 내용 표시\r\n                    board.boardWrite\r\n                )}\r\n            </p>\r\n\r\n            {/* 작성자, 작성일, 수정일 표시 */}\r\n            <p>작성자: {userNickname}</p>\r\n            <p>작성일: {new Date(board.createdDate).toLocaleString()}</p>\r\n            <p>수정일: {new Date(board.updatedDate).toLocaleString()}</p>\r\n\r\n            {/* 현재 사용자가 게시물 작성자이거나 관리자일 경우 수정/삭제 버튼 표시 */}\r\n            {(user && (userId === user.userId || user.userLevel >= 4)) && (\r\n                <div>\r\n                    <button onClick={handleEdit}>\r\n                        {isEditing ? '저장' : '수정'}\r\n                    </button>\r\n                    <button onClick={handleDelete}>삭제</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BoardDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}