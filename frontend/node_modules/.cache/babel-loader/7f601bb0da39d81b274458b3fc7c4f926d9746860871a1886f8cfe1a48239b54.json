{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\kyh-CafeProject\\\\CafeProject\\\\Cafe_Project\\\\frontend\\\\src\\\\component\\\\BoardList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport '../App.css';\n\n// 게시판 목록 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardList({\n  user\n}) {\n  _s();\n  // 현재 URL에서 카테고리 파라미터를 가져옴 (기본값: \"all\")\n  const {\n    category = \"all\"\n  } = useParams();\n  // 게시물 목록, 오류 메시지, 페이지 및 검색 관련 상태 변수\n  const [boards, setBoards] = useState([]);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(1); // 총 페이지 수\n  const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태\n  const [searchCategory, setSearchCategory] = useState(category); // 검색에 사용될 카테고리\n  const [selectedCategory, setSelectedCategory] = useState(category); // 검색 선택 카테고리\n  const navigate = useNavigate(); // 페이지 이동을 위한 훅\n\n  // 카테고리 ID를 한글 이름으로 변환하는 함수\n  const getCategoryNameInKorean = categoryId => {\n    switch (categoryId) {\n      case 'all':\n      case 1:\n        return '전체';\n      case 'free':\n      case 2:\n        return '자유';\n      case 'questions':\n      case 3:\n        return '질문';\n      case 'notice':\n      case 4:\n        return '공지';\n      default:\n        return '알 수 없음';\n    }\n  };\n\n  // 게시물을 서버에서 가져오는 함수\n  useEffect(() => {\n    const fetchBoards = async () => {\n      try {\n        // 선택된 카테고리에 따라 API 호출\n        const response = await fetch(`http://localhost:8080/boards/category/${category}`);\n        if (!response.ok) {\n          setError('서버에서 오류가 발생했습니다.');\n        } else {\n          const data = await response.json();\n          setBoards(data); // 게시물 데이터 설정\n          setTotalPages(Math.ceil(data.length / 10)); // 페이지 수 계산\n        }\n      } catch (err) {\n        setError('네트워크 오류가 발생했습니다.');\n      }\n    };\n    fetchBoards(); // 게시물 데이터 가져오기\n  }, [category]);\n\n  // 검색 버튼 클릭 시 검색 카테고리를 설정하고 페이지 이동\n  const handleSearch = () => {\n    setSearchCategory(selectedCategory);\n    navigate(`/boards/category/${selectedCategory}`);\n  };\n\n  // 글쓰기 버튼 클릭 시 로그인 여부 확인 후 페이지 이동\n  const handleCreatePost = () => {\n    if (user) {\n      navigate('/create-post');\n    } else {\n      alert('로그인이 필요합니다.');\n      navigate('/login');\n    }\n  };\n\n  // 오류가 발생한 경우 오류 메시지 표시\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC624\\uB958: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 게시물이 없는 경우 표시할 메시지\n  if (boards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAC8C\\uC2DC\\uBB3C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 공지사항과 기타 게시물을 분리\n  const noticeBoards = boards.filter(board => board.boardCategory === 4); // 공지사항\n  const otherBoards = boards.filter(board => board.boardCategory !== 4); // 기타 게시물\n\n  // 기타 게시물을 최신순으로 정렬\n  otherBoards.sort((a, b) => new Date(b.updatedDate) - new Date(a.updatedDate));\n\n  // 검색어가 포함된 게시물 필터링\n  const filteredBoards = [...noticeBoards, ...otherBoards].filter(board => board.boardTitle.includes(searchTerm) || board.boardWrite.includes(searchTerm));\n\n  // 현재 페이지에 표시할 게시물 목록을 슬라이싱\n  const displayedBoards = filteredBoards.slice(currentPage * 10, (currentPage + 1) * 10);\n\n  // 다음 페이지로 이동하는 함수\n  const handleNextPage = () => {\n    if (currentPage < totalPages - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  // 이전 페이지로 이동하는 함수\n  const handlePreviousPage = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [getCategoryNameInKorean(category), \" \\uAC8C\\uC2DC\\uD310\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"\\uC804\\uCCB4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"notice\",\n          children: \"\\uACF5\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"questions\",\n          children: \"\\uC9C8\\uBB38\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"free\",\n          children: \"\\uC790\\uC720\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        className: \"create-post-button-container\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-post-button-container\",\n        children: user && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreatePost,\n          children: \"\\uAE00\\uC4F0\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"list-up\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uB0B4\\uC6A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC5C5\\uB370\\uC774\\uD2B8 \\uB0A0\\uC9DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC791\\uC131\\uC790\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: displayedBoards.map(board => {\n          var _board$user;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: board.boardCategory === 4 ? 'notice-row' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: board.boardNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: getCategoryNameInKorean(board.boardCategory)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/boards/detail/${board.boardNumber}`,\n                children: board.boardTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/boards/detail/${board.boardNumber}`,\n                children: board.boardWrite.substring(0, 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(board.updatedDate).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_board$user = board.user) === null || _board$user === void 0 ? void 0 : _board$user.userNickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, board.boardNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousPage,\n        disabled: currentPage === 0,\n        children: \"\\uC774\\uC804 \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [currentPage + 1, \" / \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: currentPage === totalPages - 1,\n        children: \"\\uB2E4\\uC74C \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(BoardList, \"Aoas9YfbHSqcmgKXGZPHhh9Xzng=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardList;\nexport default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useParams","jsxDEV","_jsxDEV","BoardList","user","_s","category","boards","setBoards","error","setError","currentPage","setCurrentPage","totalPages","setTotalPages","searchTerm","setSearchTerm","searchCategory","setSearchCategory","selectedCategory","setSelectedCategory","navigate","getCategoryNameInKorean","categoryId","fetchBoards","response","fetch","ok","data","json","Math","ceil","length","err","handleSearch","handleCreatePost","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","noticeBoards","filter","board","boardCategory","otherBoards","sort","a","b","Date","updatedDate","filteredBoards","boardTitle","includes","boardWrite","displayedBoards","slice","handleNextPage","handlePreviousPage","className","value","onChange","e","target","type","placeholder","onClick","map","_board$user","boardNumber","to","substring","toLocaleString","userNickname","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/kyh-CafeProject/CafeProject/Cafe_Project/frontend/src/component/BoardList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\n// 게시판 목록 컴포넌트\r\nfunction BoardList({ user }) {  \r\n    // 현재 URL에서 카테고리 파라미터를 가져옴 (기본값: \"all\")\r\n    const { category = \"all\" } = useParams(); \r\n    // 게시물 목록, 오류 메시지, 페이지 및 검색 관련 상태 변수\r\n    const [boards, setBoards] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(1); // 총 페이지 수\r\n    const [searchTerm, setSearchTerm] = useState(''); // 검색어 상태\r\n    const [searchCategory, setSearchCategory] = useState(category); // 검색에 사용될 카테고리\r\n    const [selectedCategory, setSelectedCategory] = useState(category); // 검색 선택 카테고리\r\n    const navigate = useNavigate(); // 페이지 이동을 위한 훅\r\n\r\n    // 카테고리 ID를 한글 이름으로 변환하는 함수\r\n    const getCategoryNameInKorean = (categoryId) => {\r\n        switch (categoryId) {\r\n            case 'all':\r\n            case 1:\r\n                return '전체';\r\n            case 'free':\r\n            case 2:\r\n                return '자유';\r\n            case 'questions':\r\n            case 3:\r\n                return '질문';\r\n            case 'notice':\r\n            case 4:\r\n                return '공지';\r\n            default:\r\n                return '알 수 없음';\r\n        }\r\n    };\r\n\r\n    // 게시물을 서버에서 가져오는 함수\r\n    useEffect(() => {\r\n        const fetchBoards = async () => {\r\n            try {\r\n                // 선택된 카테고리에 따라 API 호출\r\n                const response = await fetch(`http://localhost:8080/boards/category/${category}`);\r\n                if (!response.ok) {\r\n                    setError('서버에서 오류가 발생했습니다.');\r\n                } else {\r\n                    const data = await response.json();\r\n                    setBoards(data); // 게시물 데이터 설정\r\n                    setTotalPages(Math.ceil(data.length / 10)); // 페이지 수 계산\r\n                }\r\n            } catch (err) {\r\n                setError('네트워크 오류가 발생했습니다.');\r\n            }\r\n        };\r\n        fetchBoards(); // 게시물 데이터 가져오기\r\n    }, [category]);\r\n\r\n    // 검색 버튼 클릭 시 검색 카테고리를 설정하고 페이지 이동\r\n    const handleSearch = () => {\r\n        setSearchCategory(selectedCategory); \r\n        navigate(`/boards/category/${selectedCategory}`);\r\n    };\r\n\r\n    // 글쓰기 버튼 클릭 시 로그인 여부 확인 후 페이지 이동\r\n    const handleCreatePost = () => {\r\n        if (user) {\r\n            navigate('/create-post'); \r\n        } else {\r\n            alert('로그인이 필요합니다.'); \r\n            navigate('/login'); \r\n        }\r\n    };\r\n\r\n    // 오류가 발생한 경우 오류 메시지 표시\r\n    if (error) {\r\n        return <div>오류: {error}</div>;\r\n    }\r\n\r\n    // 게시물이 없는 경우 표시할 메시지\r\n    if (boards.length === 0) {\r\n        return <div>게시물이 없습니다.</div>;\r\n    }\r\n\r\n    // 공지사항과 기타 게시물을 분리\r\n    const noticeBoards = boards.filter(board => board.boardCategory === 4); // 공지사항\r\n    const otherBoards = boards.filter(board => board.boardCategory !== 4); // 기타 게시물\r\n\r\n    // 기타 게시물을 최신순으로 정렬\r\n    otherBoards.sort((a, b) => new Date(b.updatedDate) - new Date(a.updatedDate));\r\n\r\n    // 검색어가 포함된 게시물 필터링\r\n    const filteredBoards = [...noticeBoards, ...otherBoards].filter(board =>\r\n        board.boardTitle.includes(searchTerm) || board.boardWrite.includes(searchTerm)\r\n    );\r\n\r\n    // 현재 페이지에 표시할 게시물 목록을 슬라이싱\r\n    const displayedBoards = filteredBoards.slice(currentPage * 10, (currentPage + 1) * 10);\r\n\r\n    // 다음 페이지로 이동하는 함수\r\n    const handleNextPage = () => {\r\n        if (currentPage < totalPages - 1) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    // 이전 페이지로 이동하는 함수\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 0) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>{getCategoryNameInKorean(category)} 게시판</h2>\r\n\r\n            {/* 검색 기능 UI */}\r\n            <div className=\"board-controls\">\r\n                {/* 카테고리 선택 드롭다운 */}\r\n                <select\r\n                    value={selectedCategory}\r\n                    onChange={(e) => setSelectedCategory(e.target.value)}\r\n                >\r\n                    <option value=\"all\">전체</option>\r\n                    <option value=\"notice\">공지</option>\r\n                    <option value=\"questions\">질문</option>\r\n                    <option value=\"free\">자유</option>\r\n                </select>\r\n\r\n                {/* 검색어 입력 필드 */}\r\n                <input\r\n                    type=\"text\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    placeholder=\"검색어를 입력하세요\"\r\n                />\r\n                <button onClick={handleSearch} className='create-post-button-container'>검색</button>\r\n\r\n                {/* 글쓰기 버튼 (로그인한 사용자에게만 표시) */}\r\n                <div className=\"create-post-button-container\">\r\n                    {user && <button onClick={handleCreatePost}>글쓰기</button>}\r\n                </div>\r\n            </div>                                                                                       \r\n            \r\n            {/* 게시물 목록 테이블 */}\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"list-up\">\r\n                        <th>번호</th>\r\n                        <th>카테고리</th>\r\n                        <th>제목</th>\r\n                        <th>내용</th>\r\n                        <th>업데이트 날짜</th>\r\n                        <th>작성자</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {displayedBoards.map((board) => (\r\n                        <tr key={board.boardNumber} className={board.boardCategory === 4 ? 'notice-row' : ''}>\r\n                            <td>{board.boardNumber}</td>\r\n                            <td>{getCategoryNameInKorean(board.boardCategory)}</td>\r\n                            <td>\r\n                                <Link to={`/boards/detail/${board.boardNumber}`}>\r\n                                    {board.boardTitle}\r\n                                </Link>\r\n                            </td>\r\n                            <td>\r\n                                <Link to={`/boards/detail/${board.boardNumber}`}>\r\n                                    {board.boardWrite.substring(0, 10)}\r\n                                </Link>\r\n                            </td>\r\n                            <td>{new Date(board.updatedDate).toLocaleString()}</td>\r\n                            <td>{board.user?.userNickname}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* 페이지네이션 컨트롤 */}\r\n            <div className=\"pagination\">\r\n                <button onClick={handlePreviousPage} disabled={currentPage === 0}>\r\n                    이전 페이지\r\n                </button>\r\n                <span>{currentPage + 1} / {totalPages}</span>\r\n                <button onClick={handleNextPage} disabled={currentPage === totalPages - 1}>\r\n                    다음 페이지\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BoardList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}